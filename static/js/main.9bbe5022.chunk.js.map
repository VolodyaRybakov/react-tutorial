{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Loader.js","Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","TodoItem","todo","index","useContext","removeTodo","toggleTodo","classes","completed","push","style","className","join","type","checked","onChange","bind","id","title","onClick","ul","listStyle","margin","TodoList","props","todos","map","Modal","state","isOpen","Fragment","setState","this","Component","AddTodo","lazy","Promise","resolve","setTimeout","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","Provider","value","filter","Suspense","fallback","Loader","onCreate","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bbe5022.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Context from \"../context\";\r\n\r\nconst styles = {\r\n    li: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        padding: \".5rem 1rem\",\r\n        border: \"1px solid #ccc\",\r\n        borderRadius: \"4px\",\r\n        marginBottom: \".5rem\",\r\n    },\r\n    input: {\r\n        marginRight: \"1rem\",\r\n    },\r\n};\r\n\r\nfunction TodoItem({ todo, index }) {\r\n    const { removeTodo, toggleTodo } = useContext(Context);\r\n    // console.log(f);\r\n    const classes = [];\r\n\r\n    if (todo.completed) {\r\n        classes.push(\"done\");\r\n    }\r\n\r\n    return (\r\n        <li style={styles.li}>\r\n            <span className={classes.join(\" \")}>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={todo.completed}\r\n                    style={styles.input}\r\n                    onChange={toggleTodo.bind(null, todo.id)}\r\n                />\r\n                <strong>{index + 1}</strong>\r\n                &nbsp;\r\n                {todo.title}\r\n            </span>\r\n\r\n            <button className=\"rm\" onClick={removeTodo.bind(null, todo.id)}>\r\n                &times;\r\n            </button>\r\n        </li>\r\n    );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst styles = {\r\n    ul: {\r\n        listStyle: \"none\",\r\n        margin: 0,\r\n        padding: 0,\r\n    },\r\n};\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <ul style={styles.ul}>\r\n            {props.todos.map((todo, index) => {\r\n                return <TodoItem todo={todo} key={todo.id} index={index} />;\r\n            })}\r\n        </ul>\r\n    );\r\n}\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\n\r\nexport default () => (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\", margin: \".5rem\" }}>\r\n        <div className=\"lds-dual-ring\" />\r\n    </div>\r\n);\r\n","import React from \"react\";\r\nimport \"./Modal.css\";\r\n\r\nexport default class Modal extends React.Component {\r\n    state = {\r\n        isOpen: false,\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button onClick={() => this.setState({ isOpen: true })}>\r\n                    Open modal\r\n                </button>\r\n\r\n                {this.state.isOpen && (\r\n                    <div className=\"modal\">\r\n                        <div className=\"modal-body\">\r\n                            <h1>Modal Title</h1>\r\n                            <p>I am awesome modal!</p>\r\n                            <button\r\n                                onClick={() => this.setState({ isOpen: false })}\r\n                            >\r\n                                Close modal\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { useEffect } from \"react\";\nimport TodoList from \"./Todo/TodoList\";\nimport Context from \"./context\";\nimport Loader from \"./Loader\";\nimport Modal from \"./Modal/Modal\";\n\nconst AddTodo = React.lazy(\n    () =>\n        new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(import(\"./Todo/AddTodo\"));\n            }, 3000);\n        })\n);\n\nfunction App() {\n    const [todos, setTodos] = React.useState([]);\n    const [loading, setLoading] = React.useState(true);\n\n    useEffect(() => {\n        fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=5\")\n            .then((response) => response.json())\n            .then((todos) => {\n                setTimeout(() => {\n                    setTodos(todos);\n                    setLoading(false);\n                }, 2000);\n            });\n    }, []);\n\n    function toggleTodo(id) {\n        setTodos(\n            todos.map((todo) => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed;\n                }\n                return todo;\n            })\n        );\n    }\n\n    function removeTodo(id) {\n        setTodos(todos.filter((todo) => todo.id !== id));\n    }\n\n    function addTodo(title) {\n        setTodos(\n            todos.concat([\n                {\n                    title,\n                    id: Date.now(),\n                    completed: false,\n                },\n            ])\n        );\n    }\n\n    return (\n        <Context.Provider value={{ removeTodo, toggleTodo }}>\n            <div className=\"wrapper\">\n                <h1> React tutorial </h1>\n\n                <Modal />\n\n                <React.Suspense fallback={<Loader></Loader>}>\n                    <AddTodo onCreate={addTodo} />\n                </React.Suspense>\n\n                {loading && <Loader />}\n                {todos.length ? (\n                    <TodoList todos={todos} />\n                ) : loading ? null : (\n                    <p>No todos!</p>\n                )}\n            </div>\n        </Context.Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}